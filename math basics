// Prints the digits of a number by traversing the number.

class Main {
    public static void main(String[] args) {
        int n=56756;
        while (n>0){
            int ld=n%10;
               System.out.println(ld);
               n=n/10;
        }
     
    }
}
/* output:
6
5
7
6
5 /*

/* Given two numbers A and B, find Kth digit from right of AB.
 

Example 1:

Input:
A = 3
B = 3
K = 1
Output:
7
Explanation:
33 = 27 and 1st
digit from right is 
7
Example 2:

Input:
A = 5
B = 2
K = 2
Output:
2
Explanation:
52 = 25 and second
digit from right is
2.
/*

// Finds the power of A power B and then finds the kth digit of the number
class KthDigitWithPower {
    public static void main(String[] args) {
       int A = 3, B=3, k=1;
      // Built-in pow function to find A power B
       long power=(long)Math.pow(A,B);
        long i=1;
        
        while(power>0){
            long ans=power%10;
          // 
            if(k==i){
                return ans;
            }
            i++;
            power=power/10;
        }
        return 0;
       
    }
}



// In online compilers use the below code

class Main {
    public static void main(String[] args) {
       int A = 3, B=3, k=1;
       long power=(long)Math.pow(A,B);
        long i=1;
        
        while(power>0){
            long ans=power%10;
            if(k==i){
                System.out.println(ans);
                break;
            }
            i++;
            power=power/10;
        }
        
       
    }
}

/*Write a program that gets n as input and print the number of digits in the number

Testcase 1 :

Input : 

325345

Expected output:

6 /*
class Main {
    public static void main(String[] args) {
        int n=325345;
        int count=0;
        if(n==0){
            count=0;
        }
        else{
            while(n!=0){
              n/=10;
           count++;  
            }
        }
        System.out.println("No of digits"+count);
    }
}

