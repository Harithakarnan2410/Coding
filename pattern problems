//first pattern
import java.util.*;

class pattern1 {
    public static void main(String[] args) {
        int n=5;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                System.out.print("*");
            }
             System.out.println("");
        }
       
    }
}
/* output:
***** 
***** 
***** 
***** 
*****  /*
//second pattern
class Main {
    public static void main(String[] args) {
        int n=5;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                System.out.print(j);
            }
            System.out.println(" ");
        }
    }
}
/* 
12345 
12345 
12345 
12345 
12345  /*
//3rd pattern

class Main {
    public static void main(String[] args) {
        int n=5;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(j);
            }
            System.out.println("");
        }
    }
}
/*
1
12
123
1234
12345  /*


//4th pattern (Geeks for geeks)
Given a number N. The task is to print a series of asterisk(*) from 1 till N terms with increasing order and difference being 1.
/*
Example 1:

Input:
N = 3
Output:
* ** ***
Explanation:
First, print 1 asterisk then space after
that print 2 asterisk and space after that 
print 3 asterisk now stop as N is 3.
Example 2:

Input:
N = 5
Output:
* ** *** **** ***** 
Explanation:
First, print 1 asterisk then space after
that print 2 asterisk and space and do this
3 more times.
Your Task:  
You don't need to read input. Your task is to complete the function printPattern() which takes an integer N as an input parameter and print the above pattern.

Expected Time Complexity: O(N^2)
Expected Auxiliary Space: O(1)

Constraints:
1 <= N <= 1000  /*


//User function Template for Java
class Solution{
    static void printPattern(int N){
        for(int i=1;i<=N;i++){
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.print(" ");
        }
    }
}
//5th pattern
/* 
12345 
1234 
123 
12 
1 /*

class Main {
    public static void main(String[] args) {
        int n=5;
    for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i+1;j++){
                System.out.print(j);
            }
            System.out.println(" ");
        }
    }
}
//6th pattern (Assignment)
/* Write a Program which takes input n and prints the below pattern
Sample 1:

Input:

n = 4

Expected output:

****

***

**

* /*

class Main {
    public static void main(String[] args) {
        int n=4;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i+1;j++){
               System.out.print("*"); 
            }
            System.out.println(" ");
        }
    }
}

/* Sample 2

Input:

n= 6

******

*****

****

***

**

*  /*

class Main {
    public static void main(String[] args) {
        int n=6;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i+1;j++){
               System.out.print("*"); 
            }
            System.out.println(" ");
        }
    }
}

/* Sample 1:

Input:

n = 4

Expected output:

4321

321

21

1 /*

class Main {
    public static void main(String[] args) {
        int n=4;
        for(int i=n;i>=1;i--){
            for(int j=i;j>=1;j--){
               System.out.print(j); 
            }
            System.out.println(" ");
        }
    }
}

/*
Sample 2

Input:

n= 6

654321

54321

4321

321

21

1 /*

class Main {
    public static void main(String[] args) {
        int n=6;
        for(int i=n;i>=1;i--){
            for(int j=i;j>=1;j--){
               System.out.print(j); 
            }
            System.out.println(" ");
        }
    }
}
//pattern 8
/* Sample 1:

Input:

n = 4

Expected output:

*

**

***

****

/*

class Main {
    public static void main(String[] args) {
        int n=4;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                 System.out.print("*");
            }
             System.out.println(" ");
        }
       
    }
}
/*
Sample 2

Input:

n= 6

*

**

***

****

*****

******
/*

class Main {
    public static void main(String[] args) {
        int n=6;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                 System.out.print("*");
            }
             System.out.println(" ");
        }
       
    }
}

//pattern 9 (geeks for geeks)
/*  Geek is very fond of patterns. Once, his teacher gave him a pattern to solve. He gave Geek an integer n and asked him to build a pattern.

Help Geek to build a star pattern.

Example 1:

Input: 5
Output:
* 
* * 
* * * 
* * * * 
* * * * *
* * * *
* * *
* *
*
Example 2:

Input: 3
Output:
* 
* * 
* * * 
* *
*
Your Task:
You don't need to input anything. Complete the function printTriangle() which takes an integer n  as the input parameter and prints the pattern.

Expected Time Complexity: O(n2).
Expected Auxiliary Space: O(1).

Constraints:
1 <= n <= 1000
/*

class Solution {

    void printTriangle(int n) {
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print("* ");
            }
            System.out.println("");
        }
        for(int i=1;i<=n-1;i++){
            for(int j=1;j<=n-i;j++){
                System.out.print("* ");
            }
            System.out.println("");
        }
    }
}



