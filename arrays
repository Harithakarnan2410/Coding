// NUMBER SERIES
/* Given a number N, find the Nth term in the series 1, 3, 6, 10, 15, 21…

 

Example 1:

Input :
N = 4 
Output:
10
Explanation:
The 4th term of the Series is 10.  /*
class Solution {
    static int findNthTerm(int N) {
        int sum=0;
        for(int i=1;i<=N;i++){
            sum=sum+i;
        }
        return sum;
    }
};


/*
Given the value of n, we need to find the sum of the series where i-th term is sum of first i natural numbers.

NOTE: Sum of the series 1 + (1+2) + (1+2+3) + (1+2+3+4) + …… + (1+2+3+4+…+n)

Example 1:

Input: n = 5
Output: 35 
Explanation: 1 + (1+2) + (1+2+3).. = 35
Hence sum of the series is 35. /*
class Solution {
    static long sumOfTheSeries(long n){
        int sum=0,seriesterm=0;
        for(int i=1;i<=n;i++){
            sum=sum+i;
            seriesterm=seriesterm+(sum);
        }
        return seriesterm;
    }
}
/*Given the value of n, we need to find the sum of the series where i-th term is sum of first i odd natural numbers.

NOTE: Sum of the series 1 + (1+3) + (1+3+5) + (1+3+5+7) + …… + (1+3+5+7+…+(2n-1))

Example 1:

Input: n = 2
Output: 5 
Explanation: 1 + (1+3) = 5
Hence sum of the series is 5. /*
class Solution {
    static long sumOfTheSeries(long n){
        long x=0,sum=0;
        for(long i=1;i<=(2*n-1);i=i+2){
            x=x+i;
            sum=sum+x;
        }
        return sum;
    }
}
/*Given an integer n, your task is to compute the sum of all natural numbers from 1 to n (inclusive). If n is 0, the sum should be 0.

Examples:

Input: n = 1
Output: 1
Explanation: For n = 1, the sum will be 1.
Input: n = 5
Output: 15
Explanation: For n = 5, sum will be 15. 1 + 2 + 3 + 4 + 5 = 15. /*
class Solution {
    public static int seriesSum(long n) {
        int sum=0;
        for(int i=1;i<=n;i++){
            sum=sum+i;
        
        }
        return sum;
    }
}

/*Given an integer n, calculate the sum of series 13 + 23 + 33 + 43 + … till n-th term.

Examples:

Input: n = 5
Output: 225
Explanation: 13 + 23 + 33 + 43 + 53 = 225
Input: n = 7
Output: 784
Explanation: 13 + 23 + 33 + 43 + 53 + 63 + 73 = 784 /*
class Solution {
    int sumOfSeries(int n) {
        int sum=0;
        for(int i=1;i<=n;i++){
            sum=sum+(i*i*i);
        
        }
        return sum;
    }
}
/*    Given a number N.Find the sum of fifth powers of natural numbers till N i.e. 15+25+35+..+N5.

Example 1:

Input:
N=2
Output:
33
Explanation:
The sum is calculated as 15+25=1+32=33.
Example 2:

Input:
N=3
Output:
276
Explanation:
The sum is calculated as 15+25+35
=1+32+243=276. /*
class Solution {
    long sumOfFifthPowers(long N) {
       int sum=0;
        for(int i=1;i<=N;i++){
            sum=sum+(i*i*i*i*i);
        
        }
        return sum;
    }
}

/*You are given an integer n. Your task is to reverse the digits, ensuring that the reversed number has no leading zeroes.

Examples:

Input: 200
Output: 2
Explanation: By reversing the digits of number, number will change into 2.
Input : 122
Output: 221
Explanation: By reversing the digits of number, number will change into 221. /*
class Solution {
    public int reverseDigits(int n) {
        int  sum=0;
        while(n>0){
            sum=sum*10+(n%10);
            n=n/10;
    }
    return sum;
}
}

/*  Given an integer N, find the absolute difference between sum of the squares of first N natural numbers and square of sum of first N natural numbers.

Example 1:

Input: N = 2
Output: 4 
Explanation: abs|(12 + 22) - (1 + 2)2| = 4.  /*
class Solution{
    static long squaresDiff(int N){
        return Math.abs((N*(N+1)*(2*N+1))/6-(long)Math.pow((N*(N+1)/2),2));
    }
}
/*
Consider a sample space consisting of all perfect squares starting from 1, 4, 9 and so on. You are given a number n, you have to find the number of integers less than n in the sample space.

Examples :

Input: n = 9
Output: 2
Explanation: 1 and 4 are the only Perfect Squares less than 9. So, the Output is 2. /*
class Solution {
    static int countSquares(int n) {
        return (int)Math.sqrt(n-1);
    }
}
